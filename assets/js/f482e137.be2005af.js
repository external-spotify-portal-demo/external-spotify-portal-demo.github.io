"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[831],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(n),g=i,h=p["".concat(l,".").concat(g)]||p[g]||d[g]||r;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:i,o[1]=s;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},7079:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>u});var a=n(7462),i=(n(7294),n(3905));const r={title:"Setup & Installation",sidebar_position:2},o="Setup & Installation",s={unversionedId:"insights/setup-and-installation",id:"insights/setup-and-installation",title:"Setup & Installation",description:"Prerequisites",source:"@site/docs/insights/setup-and-installation.mdx",sourceDirName:"insights",slug:"/insights/setup-and-installation",permalink:"/insights/setup-and-installation",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/insights/setup-and-installation.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Setup & Installation",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Insights",permalink:"/insights/"},next:{title:"Core Concepts",permalink:"/insights/core-concepts"}},l={},u=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Configure the Sign-In Resolver",id:"configure-the-sign-in-resolver",level:3},{value:"Backend Installation",id:"backend-installation",level:2},{value:"Obtain the Plugin",id:"obtain-the-plugin",level:3},{value:"Integrate the Plugin",id:"integrate-the-plugin",level:3},{value:"Create an API Token for Your Organization",id:"create-an-api-token-for-your-organization",level:3},{value:"Configure the Spotify Backstage API Token",id:"configure-the-spotify-backstage-api-token",level:3},{value:"Additional Configuration",id:"additional-configuration",level:2},{value:"Extra Entity Metadata Capture",id:"extra-entity-metadata-capture",level:3},{value:"Total Users Count Filter",id:"total-users-count-filter",level:3},{value:"Frontend Installation",id:"frontend-installation",level:2},{value:"Get the Plugin",id:"get-the-plugin",level:3},{value:"Configure Access Controls",id:"configure-access-controls",level:3},{value:"Option 1: Use the RBAC Plugin (Recommended)",id:"option-1-use-the-rbac-plugin-recommended",level:4},{value:"Option 2: Use Custom Policy Handlers",id:"option-2-use-custom-policy-handlers",level:4},{value:"Integrate the Plugin with Your Frontend App",id:"integrate-the-plugin-with-your-frontend-app",level:3},{value:"Verify Functionality",id:"verify-functionality",level:3}],c={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"setup--installation"},"Setup & Installation"),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("h3",{id:"configure-the-sign-in-resolver"},"Configure the Sign-In Resolver"),(0,i.kt)("p",null,"To allow Insights to identify the user entity associated with the signed-in user, your ",(0,i.kt)("strong",{parentName:"p"},"SignInResolver")," must issue an identity token with a ",(0,i.kt)("strong",{parentName:"p"},"sub")," (subject) claim pointing to the user entity in the catalog corresponding to the signed-in user. While many authentication providers handle this automatically, if you're using a custom provider, you might need to implement this behavior yourself. Refer to examples in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/backstage/backstage/blob/master/plugins/auth-backend/src/providers/google/provider.ts"},"Google auth sign-in resolver")," or the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/backstage/backstage/blob/master/plugins/auth-backend/src/providers/github/provider.ts"},"GitHub auth sign-in resolver"),". For more information on configuring a sign-in resolver, see the ",(0,i.kt)("a",{parentName:"p",href:"https://backstage.io/docs/auth/identity-resolver"},"identity resolver documentation on backstage.io"),"."),(0,i.kt)("h2",{id:"backend-installation"},"Backend Installation"),(0,i.kt)("h3",{id:"obtain-the-plugin"},"Obtain the Plugin"),(0,i.kt)("p",null,"Add the Insights backend as a dependency to your Backstage backend app:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn workspace backend add @spotify/backstage-plugin-insights-backend\n")),(0,i.kt)("h3",{id:"integrate-the-plugin"},"Integrate the Plugin"),(0,i.kt)("p",null,"Create a new file named ",(0,i.kt)("inlineCode",{parentName:"p"},"packages/backend/src/plugins/backstageInsights.ts")," with the following content:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Router } from 'express';\nimport { PluginEnvironment } from '../types';\nimport { createRouter } from '@spotify/backstage-plugin-insights-backend';\n\nexport default async function createPlugin(\n  env: PluginEnvironment,\n): Promise<Router> {\n  return await createRouter({\n    ...env,\n  });\n}\n")),(0,i.kt)("p",null,"Next, wire up the Insights backend in ",(0,i.kt)("inlineCode",{parentName:"p"},"packages/backend/src/index.ts"),". Import the module from the previous step, create a plugin environment, and add the router to the Express app."),(0,i.kt)("h3",{id:"create-an-api-token-for-your-organization"},"Create an API Token for Your Organization"),(0,i.kt)("p",null,"To secure communication between your Backstage backend and Spotify's servers, you need to create an API token. Visit ",(0,i.kt)("a",{parentName:"p",href:"https://backstage.spotify.com/account/tokens/"},"backstage.spotify.com/account/tokens")," and create a token with a descriptive name, such as ",(0,i.kt)("inlineCode",{parentName:"p"},"backstage-insights-production-token"),". Note down the token value as you'll need it in the next step."),(0,i.kt)("h3",{id:"configure-the-spotify-backstage-api-token"},"Configure the Spotify Backstage API Token"),(0,i.kt)("p",null,"In your ",(0,i.kt)("inlineCode",{parentName:"p"},"app-config.yaml"),", add the following entry to enable communication with Spotify's servers:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"spotify:\n  apiToken: ${SPOTIFY_BACKSTAGE_API_TOKEN}\n")),(0,i.kt)("p",null,"Set the ",(0,i.kt)("inlineCode",{parentName:"p"},"SPOTIFY_BACKSTAGE_API_TOKEN")," environment variable to the API token you created earlier. Ensure that you treat this value as a secret and avoid checking it into version control."),(0,i.kt)("h2",{id:"additional-configuration"},"Additional Configuration"),(0,i.kt)("h3",{id:"extra-entity-metadata-capture"},"Extra Entity Metadata Capture"),(0,i.kt)("p",null,"The Insights backend integrates with the Software Catalog to enhance analytics events with additional entity metadata. This allows filtering or grouping data based on attributes like the entity's ",(0,i.kt)("inlineCode",{parentName:"p"},"type"),". By default, the following fields are captured on analytics events associated with catalog entities: ",(0,i.kt)("inlineCode",{parentName:"p"},"kind"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"metadata.namespace"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"spec.type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"spec.lifecycle"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"spec.owner"),". To capture extra fields, provide them in the configuration. Common fields can be found in the ",(0,i.kt)("a",{parentName:"p",href:"https://backstage.io/docs/features/software-catalog/descriptor-format"},"Catalog's YAML File Format documentation"),". You can also reference custom metadata stored on entities."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"backstageInsights:\n  captureEntityFields:\n    - spec.someCustomField\n")),(0,i.kt)("p",null,"Similarly, certain fields are captured on all analytics events related to the signed-in user, such as ",(0,i.kt)("inlineCode",{parentName:"p"},"metadata.namespace")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"spec.memberOf"),". You can configure additional user metadata capture in the configuration as well:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"backstageInsights:\n  captureIdentityFields:\n    - spec.profile.someCustomField\n")),(0,i.kt)("p",null,"Note that the Insights backend applies redaction logic to avoid collecting personal data, but you should understand the data collected when configuring these additional fields."),(0,i.kt)("h3",{id:"total-users-count-filter"},"Total Users Count Filter"),(0,i.kt)("p",null,"The Insights frontend uses the Software Catalog to determine the total number of users who can access Backstage. This number is essential for various dashboards and views. If the count is incorrect due to factors like retaining deactivated users or gradual rollouts, you can apply filters using an ","[EntityFilterQuery][efq]",". Examples include counting members of a specific group or users under a certain namespace."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"backstageInsights:\n  totalUsersEntityQueryFilter:\n    'relations.memberOf': 'group:default/rnd'\n")),(0,i.kt)("p",null,"For more details, refer to the ",(0,i.kt)("a",{parentName:"p",href:"https://backstage.io/docs/reference/catalog-client.entityfilterquery"},"EntityFilterQuery documentation on backstage.io"),"."),(0,i.kt)("h2",{id:"frontend-installation"},"Frontend Installation"),(0,i.kt)("h3",{id:"get-the-plugin"},"Get the Plugin"),(0,i.kt)("p",null,"Add the Insights frontend as a dependency to your Backstage frontend app:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn workspace app add @spotify/backstage-plugin-insights\n")),(0,i.kt)("h3",{id:"configure-access-controls"},"Configure Access Controls"),(0,i.kt)("p",null,"If you manage access permissions for catalog resources, configure access to Insights to ensure it aligns with your organization's permissions framework. There are two recommended approaches:"),(0,i.kt)("h4",{id:"option-1-use-the-rbac-plugin-recommended"},"Option 1: Use the RBAC Plugin (Recommended)"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://backstage.spotify.com/plugins/rbac"},"RBAC plugin")," offers a no-code management UI for restricting access to plugins, routes, and data within Backstage. You can define roles, assign users and groups, and configure permissions, including the ",(0,i.kt)("inlineCode",{parentName:"p"},"insights.read")," permission. "),(0,i.kt)("h4",{id:"option-2-use-custom-policy-handlers"},"Option 2: Use Custom Policy Handlers"),(0,i.kt)("p",null,"If you don't use the RBAC plugin, you can define ",(0,i.kt)("a",{parentName:"p",href:"https://backstage.io/docs/permissions/writing-a-policy"},"custom policy handlers")," for permission framework policies."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"// packages/backend/src/plugins/permissions.ts\n\nclass ExamplePolicy implements PermissionPolicy {\n  async handle(request: PolicyQuery): Promise<PolicyDecision> {\n    if (request.permission.name === 'insights.read') {\n      const isAllowed = await someEvaluationFunction();\n\n      if (isAllowed) {\n        return {\n          result: AuthorizeResult.ALLOW,\n        };\n      }\n    }\n\n    return { result: AuthorizeResult.DENY };\n  }\n}\n")),(0,i.kt)("h3",{id:"integrate-the-plugin-with-your-frontend-app"},"Integrate the Plugin with Your Frontend App"),(0,i.kt)("p",null,"Install the Insights routes in your app within ",(0,i.kt)("inlineCode",{parentName:"p"},"packages/app/src/App.tsx")," and configure the route location for the Search plugin. You can also add a sidebar item for easy access to Insights if needed."),(0,i.kt)("h3",{id:"verify-functionality"},"Verify Functionality"),(0,i.kt)("p",null,"After setting up access controls, users with the ",(0,i.kt)("inlineCode",{parentName:"p"},"insights.read")," permission should see an Insights sidebar menu item. Ensure that the Backend plugin is correctly configured and data has been collected for at least 48 hours for the dashboards to display meaningful information."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"")))}d.isMDXComponent=!0}}]);