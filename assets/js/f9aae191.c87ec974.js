"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9290],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),u=c(n),g=i,h=u["".concat(l,".").concat(g)]||u[g]||d[g]||o;return n?a.createElement(h,s(s({ref:t},p),{},{components:n})):a.createElement(h,s({ref:t},p))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,s=new Array(o);s[0]=g;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r[u]="string"==typeof e?e:i,s[1]=r;for(var c=2;c<o;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},8214:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var a=n(7462),i=(n(7294),n(3905));const o={title:"Setup & Installation",sidebar_position:2},s=void 0,r={unversionedId:"skill-exchange/setup-and-installation",id:"skill-exchange/setup-and-installation",title:"Setup & Installation",description:"Prerequisites",source:"@site/docs/skill-exchange/setup-and-installation.mdx",sourceDirName:"skill-exchange",slug:"/skill-exchange/setup-and-installation",permalink:"/skill-exchange/setup-and-installation",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/skill-exchange/setup-and-installation.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Setup & Installation",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Skill Exchange",permalink:"/skill-exchange/"},next:{title:"Tutorials",permalink:"/category/tutorials-2"}},l={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"1. Complete Spotify plugin bundle setup",id:"1-complete-spotify-plugin-bundle-setup",level:3},{value:"2. Check your Backstage version",id:"2-check-your-backstage-version",level:3},{value:"3. Enable backend-to-backend authentication",id:"3-enable-backend-to-backend-authentication",level:3},{value:"4. Ensure user entities are present in the catalog",id:"4-ensure-user-entities-are-present-in-the-catalog",level:3},{value:"5. Ensure the sign-in resolver provides the user entity associated with the current identity",id:"5-ensure-the-sign-in-resolver-provides-the-user-entity-associated-with-the-current-identity",level:3},{value:"6. Optional Configure a Slack app token",id:"6-optional-configure-a-slack-app-token",level:3},{value:"Backend Installation",id:"backend-installation",level:2},{value:"1. Getting the plugin",id:"1-getting-the-plugin",level:3},{value:"2. Integrate the plugin with your Backstage app",id:"2-integrate-the-plugin-with-your-backstage-app",level:3},{value:"3. Optional Defining default lists",id:"3-optional-defining-default-lists",level:3},{value:"Skills and Locations",id:"skills-and-locations",level:4},{value:"Frontend Installation",id:"frontend-installation",level:2},{value:"1. Getting the plugin",id:"1-getting-the-plugin-1",level:3},{value:"2. Install the Skill Exchange frontend",id:"2-install-the-skill-exchange-frontend",level:3},{value:"3. Add the User entity skills card",id:"3-add-the-user-entity-skills-card",level:3},{value:"4. Up and running!",id:"4-up-and-running",level:4}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("h3",{id:"1-complete-spotify-plugin-bundle-setup"},"1. Complete Spotify plugin bundle setup"),(0,i.kt)("p",null,"This package is a Backstage plugin and is part of the \u201cSpotify Plugins for Backstage\u201d bundle. For you to use this plugin, you must purchase a license key at ",(0,i.kt)("a",{parentName:"p",href:"https://backstage.spotify.com/"},"https://backstage.spotify.com/"),". After purchasing a license key, follow the instructions on ",(0,i.kt)("a",{parentName:"p",href:"https://backstage.spotify.com/account"},"https://backstage.spotify.com/account")," before continuing."),(0,i.kt)("h3",{id:"2-check-your-backstage-version"},"2. Check your Backstage version"),(0,i.kt)("p",null,"Please ensure your Backstage version matches the supported version shown under the installation instructions on ",(0,i.kt)("a",{parentName:"p",href:"https://backstage.spotify.com/account"},"https://backstage.spotify.com/account"),", and always check compatibility before updating Backstage."),(0,i.kt)("h3",{id:"3-enable-backend-to-backend-authentication"},"3. Enable backend-to-backend authentication"),(0,i.kt)("p",null,"Backend-to-backend authentication lets backend code in Backstage securely verify that a given request originates from another part of the backend, rather than from a user. This is useful for tasks like indexing catalog entities for search. This type of request shouldn\u2019t be permissioned, so this feature must be enabled before turning on permissions."),(0,i.kt)("p",null,"To set up backend-to-backend authentication, follow the ",(0,i.kt)("a",{parentName:"p",href:"https://backstage.io/docs/auth/service-to-service-auth#setup"},"setup instructions in the backstage.io docs"),"."),(0,i.kt)("h3",{id:"4-ensure-user-entities-are-present-in-the-catalog"},"4. Ensure user entities are present in the catalog"),(0,i.kt)("p",null,"Skill Exchange depends on user entities being present in the catalog, as users\u2019 skill profiles are tied to these. Backstage has catalog modules to import users from ",(0,i.kt)("a",{parentName:"p",href:"https://backstage.io/docs/integrations/github/org"},"GitHub"),", ",(0,i.kt)("a",{parentName:"p",href:"https://backstage.io/docs/integrations/ldap/org"},"LDAP"),", or ",(0,i.kt)("a",{parentName:"p",href:"https://backstage.io/docs/integrations/azure/org"},"Azure AD"),". You can also define users in entity YAML files manually, or create a custom ",(0,i.kt)("strong",{parentName:"p"},"EntityProvider"),"."),(0,i.kt)("h3",{id:"5-ensure-the-sign-in-resolver-provides-the-user-entity-associated-with-the-current-identity"},"5. Ensure the sign-in resolver provides the user entity associated with the current identity"),(0,i.kt)("p",null,"In order for Skill Exchange to properly identify the user entity associated with the currently signed-in user, the ",(0,i.kt)("strong",{parentName:"p"},"SignInResolver")," must issue an identity token with a ",(0,i.kt)("strong",{parentName:"p"},"sub")," (subject) claim that is an entity ref to the user entity in the catalog corresponding to the signed-in user. Many authentication providers already provide this behavior, but if using a custom provider, you may need to add this behavior yourself. For examples, see the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/backstage/backstage/blob/master/plugins/auth-backend/src/providers/google/provider.ts"},"Google auth sign-in resolver")," or the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/backstage/backstage/blob/master/plugins/auth-backend/src/providers/github/provider.ts"},"GitHub auth sign-in resolver"),". For information on configuring a sign-in resolver, see the ",(0,i.kt)("a",{parentName:"p",href:"https://backstage.io/docs/auth/identity-resolver"},"identity resolver docs on backstage.io"),"."),(0,i.kt)("h3",{id:"6-optional-configure-a-slack-app-token"},"6. ","[Optional]"," Configure a Slack app token"),(0,i.kt)("p",null,"Slack needs to be integrated to access notification and messaging functionality in Skill Exchange. A custom Slack app and an associated ",(0,i.kt)("a",{parentName:"p",href:"https://api.slack.com/authentication/token-types#bot"},"Slack Bot token")," must be created to set up Slack integration."),(0,i.kt)("p",null,"You will also need to create a Slack app manifest file. The manifest we provide below lists the required scopes for Skill Exchange's notifications functionality. For more information, you can refer to Slack's ",(0,i.kt)("a",{parentName:"p",href:"https://api.slack.com/reference/manifests#creating_apps"},"Create apps using manifests documentation"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"# This file is an example Slack app manifest used for installing a custom app in your workspace to deliver\n# Skill Exchange notifications. For more information, see https://api.slack.com/reference/manifests\ndisplay_information:\n  name: Skill Exchange for Backstage\n  description: Enables notifications from Skill Exchange for Backstage in Slack.\n  background_color: '#9BF0E1'\nfeatures:\n  bot_user:\n    display_name: Skill Exchange for Backstage\noauth_config:\n  scopes:\n    bot:\n      # scopes needed to read user information\n      - users:read\n      - users:read.email\n      # scope needed to open DMs to users\n      - im:write\n      # scopes needed to send messages\n      - chat:write\n      - chat:write.public\n")),(0,i.kt)("p",null,"The slack token configuration must be added to your ",(0,i.kt)("inlineCode",{parentName:"p"},"app-config.yaml")," (or equivalent) file"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"integrations:\n  slack:\n    token: xoxb-********-********-********\n")),(0,i.kt)("h2",{id:"backend-installation"},"Backend Installation"),(0,i.kt)("h3",{id:"1-getting-the-plugin"},"1. Getting the plugin"),(0,i.kt)("p",null,"Add the Skill Exchange packages as dependencies to your Backstage instance:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn workspace backend add @spotify/backstage-plugin-skill-exchange-backend\n")),(0,i.kt)("h3",{id:"2-integrate-the-plugin-with-your-backstage-app"},"2. Integrate the plugin with your Backstage app"),(0,i.kt)("p",null,"Create a new file, ",(0,i.kt)("inlineCode",{parentName:"p"},"packages/backend/src/plugins/skillexchange.ts")," with the following content:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { Router } from 'express';\nimport { PluginEnvironment } from '../types';\nimport { createRouter } from '@spotify/backstage-plugin-skill-exchange-backend';\n\nexport default async function createPlugin(\n  env: PluginEnvironment,\n): Promise<Router> {\n  return await createRouter({\n    ...env,\n  });\n}\n")),(0,i.kt)("p",null,"Wire up the Skill Exchange backend in ",(0,i.kt)("inlineCode",{parentName:"p"},"packages/backend/src/index.ts"),". You\u2019ll need to import the module from the previous step, create a plugin environment, and add the router to the express app:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-diff"}," // packages/backend/src/index.ts\n\n import proxy from './plugins/proxy';\n import techdocs from './plugins/techdocs';\n import search from './plugins/search';\n import permission from './plugins/permission';\n+ import skillexchange from './plugins/skillexchange';\n\n /* ... */\n\n const techdocsEnv = useHotMemoize(module, () => createEnv('techdocs'));\n const searchEnv = useHotMemoize(module, () => createEnv('search'));\n const appEnv = useHotMemoize(module, () => createEnv('app'));\n const permissionEnv = useHotMemoize(module, () => createEnv('permission'));\n+ const skillexchangeEnv = useHotMemoize(module, () => createEnv('skillEx'));\n\n /* ... */\n\n apiRouter.use('/techdocs', await techdocs(techdocsEnv));\n apiRouter.use('/proxy', await proxy(proxyEnv));\n apiRouter.use('/search', await search(searchEnv));\n apiRouter.use('/permission', await permission(permissionEnv));\n+ apiRouter.use('/skill-exchange', await skillexchange(skillexchangeEnv));\n")),(0,i.kt)("p",null,"Add the ",(0,i.kt)("inlineCode",{parentName:"p"},"SkillProfileDecoratorFactory")," to the search plugin in ",(0,i.kt)("inlineCode",{parentName:"p"},"packages/backend/src/search.ts"),". This decorates user entities with the skills they add to their profiles and allows them to be found via search."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-diff"},"+import { SkillProfileDecoratorFactory } from '@spotify/backstage-plugin-skill-exchange-backend';\n\nexport default async function createPlugin({\n  cache,\n  logger,\n  permissions,\n  discovery,\n  config,\n}: PluginEnvironment) {\n  // Initialize a connection to a search engine.\n  const searchEngine = new LunrSearchEngine({ logger });\n\n  const indexBuilder = new IndexBuilder({ logger, searchEngine });\n\n+  indexBuilder.addDecorator({\n+    factory: SkillProfileDecoratorFactory.fromConfig(env.config, {\n+      cache: env.cache,\n+      discovery: env.discovery,\n+      logger: env.logger,\n+      tokenManager: env.tokenManager,\n+    }),\n+  });\n\n  return await createRouter({\n    engine: indexBuilder.getSearchEngine(),\n    types: indexBuilder.getDocumentTypes(),\n    permissions,\n    config,\n    logger,\n  });\n}\n")),(0,i.kt)("h3",{id:"3-optional-defining-default-lists"},"3. ","[Optional]"," Defining default lists"),(0,i.kt)("p",null,"Skill Exchange has the ability to ingest lists of items that can be used across the application. For example, by adding a YAML list of locations, Gigs (Embeds, Mentorships, etc) can have their location to set to one of the locations defined in the YAML list. You can also define a default list of skills that users can select to add to their profiles (user-created skills are not available to other users to add to their profiles). This list is defined in a YAML file and passed to the Skill Exchange plugin via configuration."),(0,i.kt)("p",null,"You can add Skills and Locations by creating a new yaml file using the following basic structure:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# default-lists.yaml\n\nskills:\n  - name: Web\n    category: DISCIPLINE\n  - name: JavaScript\n    category: LANGUAGES\n  - name: Next.js\n    category: FRAMEWORKS\n  - name: React\n    category: FRAMEWORKS\n  - name: Serverless\n    category: TECHNIQUES\n\nlocations:\n  - Stockholm\n  - New York\n  - London\n")),(0,i.kt)("p",null,"Then add the configuration option in your ",(0,i.kt)("inlineCode",{parentName:"p"},"app-config.yaml")," (or equivalent) file."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-diff"},"skillExchange:\n+  defaultLists:\n+    sources:\n+      - /path/to/default-lists.yaml\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"NOTE: You can have multiple YAML lists."),(0,i.kt)("p",{parentName:"blockquote"},"You can have a different YAML file for skills and locations, and you can also have multiple files for the same type of data. For example, you can have a YAML file for locations in North America, and another YAML file for locations in Asia. The ",(0,i.kt)("inlineCode",{parentName:"p"},"sources")," property on ",(0,i.kt)("inlineCode",{parentName:"p"},"defaultLists")," takes an array of paths to your YAML files.")),(0,i.kt)("p",null,"Ingestion runs when you next restart Backstage. Items are only added and not removed, and duplicates are auto-detected. Therefore, you can leave the configuration settings and restart the Backstage instance multiple times without duplicating items. Modifying the YAML file will allow you to add new default items later."),(0,i.kt)("h4",{id:"skills-and-locations"},"Skills and Locations"),(0,i.kt)("p",null,"Locations are a flat list of location names."),(0,i.kt)("p",null,'Skills belong to one of the following categories: "DISCIPLINE", "LANGUAGES", "FRAMEWORKS", "TECHNIQUES".'),(0,i.kt)("p",null,"You can also use an optional ",(0,i.kt)("inlineCode",{parentName:"p"},"systemUser")," configuration to set the owner of the default skills. By default, this is set to 'system'. However, if you have a user that you want to be able to update and delete the default skills list, you can pass their userRef to allow them to do this. Setting a group as a ",(0,i.kt)("inlineCode",{parentName:"p"},"systemUser")," is ",(0,i.kt)("strong",{parentName:"p"},"not")," supported at the moment."),(0,i.kt)("p",null,"Currently only ingested skills are visible to all users. A System User can update and delete default skills, but if they add a new skill via the UI, it'll ",(0,i.kt)("strong",{parentName:"p"},"not")," be visible to other users."),(0,i.kt)("p",null,"Also note that deleting a skill will remove it from any Embeds, Mentorships, and Hacks it's related to, and remove it from any user profiles."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-diff"},"skillExchange:\n+  defaultLists:\n+    sources:\n+      - /path/to/default-skills.yaml\n+    systemUser: user:default/skill-admin\n")),(0,i.kt)("h2",{id:"frontend-installation"},"Frontend Installation"),(0,i.kt)("h3",{id:"1-getting-the-plugin-1"},"1. Getting the plugin"),(0,i.kt)("p",null,"Add ",(0,i.kt)("inlineCode",{parentName:"p"},"@spotify/backstage-plugin-skill-exchange")," as a dependency to ",(0,i.kt)("inlineCode",{parentName:"p"},"packages/app")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn workspace app add @spotify/backstage-plugin-skill-exchange\n")),(0,i.kt)("h3",{id:"2-install-the-skill-exchange-frontend"},"2. Install the Skill Exchange frontend"),(0,i.kt)("p",null,"Wire up routing to the ",(0,i.kt)("inlineCode",{parentName:"p"},"SkillExchangePage")," entry page. Use the ",(0,i.kt)("inlineCode",{parentName:"p"},"enableEmbeds")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"enableMentorships")," props to enable the features you intend to use. The route should look something like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-diff"},'// packages/app/src/App.tsx\n+import { SkillExchangePage } from \'@spotify/backstage-plugin-skill-exchange\';\n\nconst routes = (\n  <FlatRoutes>\n    <Navigate key="/" to="catalog" />\n\n+    <Route\n+      path="/skill-exchange"\n+      element={<SkillExchangePage enableEmbeds enableHacks enableMentorships />}\n+    />\n  </FlatRoutes>\n);\n')),(0,i.kt)("p",null,"Add a sidebar menu item that routes to the path setup in the previous step:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-diff"},'// packages/app/src/components/Root/Root.tsx\n+import SchoolIcon from \'@material-ui/icons/School\';\n\n<SidebarScrollWrapper>\n  <SidebarItem icon={MapIcon} to="tech-radar" text="Tech Radar" />\n+  <SidebarItem icon={SchoolIcon} to="skill-exchange" text="Skill Exchange" />\n</SidebarScrollWrapper>;\n')),(0,i.kt)("h3",{id:"3-add-the-user-entity-skills-card"},"3. Add the User entity skills card"),(0,i.kt)("p",null,"Skill Exchange integration with the Backstage user pages is required in order to view and edit skill profiles. To enable, add the ",(0,i.kt)("inlineCode",{parentName:"p"},"SkillExchangeUserEntitySkillsCard")," to the catalog user entity page:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-diff"},'// packages/app/src/components/catalog/EntityPage.tsx\n+import { SkillExchangeUserEntitySkillsCard } from \'@spotify/backstage-plugin-skill-exchange\';\n\nconst userPage = (\n  <EntityLayout>\n    <EntityLayout.Route path="/" title="Overview">\n      <Grid container spacing={3}>\n        {entityWarningContent}\n        <Grid item xs={12} md={6}>\n          <EntityUserProfileCard variant="gridItem" />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <EntityOwnershipCard variant="gridItem" />\n        </Grid>\n+        <Grid item xs={12} md={6}>\n+          <SkillExchangeUserEntitySkillsCard />\n+        </Grid>\n      </Grid>\n    </EntityLayout.Route>\n  </EntityLayout>\n);\n')),(0,i.kt)("h4",{id:"4-up-and-running"},"4. Up and running!"),(0,i.kt)("p",null,"Skill Exchange is now up and running! Get started by clicking the link in your Backstage sidebar, or visiting ",(0,i.kt)("inlineCode",{parentName:"p"},"<backstage-instance>/skill-exchange"),"."))}d.isMDXComponent=!0}}]);