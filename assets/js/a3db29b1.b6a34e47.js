"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[391],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>k});var o=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,o,n=function(e,t){if(null==e)return{};var a,o,n={},c=Object.keys(e);for(o=0;o<c.length;o++)a=c[o],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(o=0;o<c.length;o++)a=c[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=o.createContext({}),l=function(e){var t=o.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=l(e.components);return o.createElement(s.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,s=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),d=l(a),p=n,k=d["".concat(s,".").concat(p)]||d[p]||h[p]||c;return a?o.createElement(k,i(i({ref:t},u),{},{components:a})):o.createElement(k,i({ref:t},u))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,i=new Array(c);i[0]=p;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[d]="string"==typeof e?e:n,i[1]=r;for(var l=2;l<c;l++)i[l]=a[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,a)}p.displayName="MDXCreateElement"},755:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>l});var o=a(7462),n=(a(7294),a(3905));const c={title:"No-Code UI",sidebar_position:5},i=void 0,r={unversionedId:"soundcheck/no-code-ui",id:"soundcheck/no-code-ui",title:"No-Code UI",description:"No-Code UI is a powerful user interface built into the Soundcheck plugin that allows users to manage checks, tracks and facts without writing YAML code. Prior to No-Code UI, users had to write YAML code to configure a new check, track or fact. Now, non-programmers can add checks, tracks and facts too \u2013 thereby making it easier for everyone to work within Soundcheck.",source:"@site/docs/soundcheck/no-code-ui.mdx",sourceDirName:"soundcheck",slug:"/soundcheck/no-code-ui",permalink:"/soundcheck/no-code-ui",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/soundcheck/no-code-ui.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"No-Code UI",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"API Reference",permalink:"/soundcheck/api"},next:{title:"Tech Health",permalink:"/soundcheck/tech-health"}},s={},l=[{value:"Using the No-Code UI",id:"using-the-no-code-ui",level:2},{value:"Checks",id:"checks",level:3},{value:"Creating a new check",id:"creating-a-new-check",level:4},{value:"Editing a check",id:"editing-a-check",level:4},{value:"Tracks",id:"tracks",level:3},{value:"Creating a new track",id:"creating-a-new-track",level:4},{value:"Editing a track",id:"editing-a-track",level:4},{value:"Fact Collectors",id:"fact-collectors",level:3},{value:"Configuring a fact collector",id:"configuring-a-fact-collector",level:4},{value:"Frequency",id:"frequency",level:4},{value:"Filters",id:"filters",level:4},{value:"Caching",id:"caching",level:4},{value:"RBAC Integration",id:"rbac-integration",level:2}],u={toc:l},d="wrapper";function h(e){let{components:t,...a}=e;return(0,n.kt)(d,(0,o.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"No-Code UI is a powerful user interface built into the Soundcheck plugin that allows users to manage checks, tracks and facts without writing YAML code. Prior to No-Code UI, users had to write YAML code to configure a new check, track or fact. Now, non-programmers can add checks, tracks and facts too \u2013 thereby making it easier for everyone to work within Soundcheck."),(0,n.kt)("p",null,"No-Code UI has the same capabilities as its YAML configuration analog, however this capability simplifies and visualizes the process of managing checks, tracks and facts. Checks, tracks and facts created via No-Code UI are stored in the central Backstage database, or a ",(0,n.kt)("a",{parentName:"p",href:"https://backstage.io/docs/tutorials/configuring-plugin-databases?__hstc=71158991.ce8f00825b31a2e008e99e7bf8c61d36.1687962480385.1687962480385.1687962480385.1&__hssc=71158991.1.1687962480385&__hsfp=2924083047#connection-configuration-per-plugin"},"plugin-specific database")," if configured."),(0,n.kt)("p",null,"The No-Code UI will allow non-programmers to easily manage checks, tracks and facts via the Soundcheck UI without needing to write code. However, if a user wishes to, they can still continue to create checks, tracks and facts through Soundcheck\u2019s YAML configuration."),(0,n.kt)("h2",{id:"using-the-no-code-ui"},"Using the No-Code UI"),(0,n.kt)("h3",{id:"checks"},"Checks"),(0,n.kt)("p",null,"A check is a comparison between a defined acceptable outcome and the actual outcome of a given process. Checks indicate where the software aligns to or deviates from organizational standards and best practices."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://spotify-plugins-for-backstage-readme-images.spotifycdn.com/soundcheck-checks.png",alt:"Soundcheck Checks"})),(0,n.kt)("p",null,"Checks consist of four components: facts, paths, operators, and values. These components are then organized via a Boolean calculator in the UI. You can see an example of the rule layout a user will see when creating a check in the image below."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://spotify-plugins-for-backstage-readme-images.spotifycdn.com/soundcheck-boolean-calculator.png",alt:"Soundcheck Boolean Calculator"})),(0,n.kt)("h4",{id:"creating-a-new-check"},"Creating a new check"),(0,n.kt)("p",null,"To create a check, select the facts that you want to use, organize them into rules and give your check a meaningful name and a description. The rules are what defines a check and what a track will use in determining if an entity passes or fails. Simple expressions can be combined using Any Of / All Of to create more complex rules. You also have the option of adding Pass/Fail messages for additional details of why something passed/failed."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://spotify-plugins-for-backstage-readme-images.spotifycdn.com/soundcheck-new-check.png",alt:"Soundcheck Create Check"})),(0,n.kt)("h4",{id:"editing-a-check"},"Editing a check"),(0,n.kt)("p",null,"Once a check is created, you will be able to manage and edit your check on its detail page. You\u2019ll find no differences in how the pages look when creating/editing a check. From the checks listing page, you will see an option to edit you check, which will bring you to the details page shown below."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://spotify-plugins-for-backstage-readme-images.spotifycdn.com/soundcheck-edit-check.png",alt:"Soundcheck Edit Check"})),(0,n.kt)("p",null,"You can make as many changes as desired, but just keep in mind that changes are reflected in tracks that may already have said check assigned. Checks can also be a part of multiple tracks, which could have the unintentional effect of causing some tracks to start failing. While the track you want the check updated in may pass, a track setup somewhere else may fail."),(0,n.kt)("h3",{id:"tracks"},"Tracks"),(0,n.kt)("p",null,"Tracks are composed of levels and checks. Tracks encourage alignment to architectural best practices and standards and are analogous to an organization\u2019s long-term tech health initiatives. Tracks are composed of one or more levels, and each level is composed of one or more checks. Each level of checks sets the standard for an organization and how they want to determine what passes and what fails in the individual track."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://spotify-plugins-for-backstage-readme-images.spotifycdn.com/soundcheck-tracks.png",alt:"Soundcheck Tracks"})),(0,n.kt)("h4",{id:"creating-a-new-track"},"Creating a new track"),(0,n.kt)("p",null,"To create a track, give your track a meaningful name and a description, and select the filters and checks that you want to use."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://spotify-plugins-for-backstage-readme-images.spotifycdn.com/soundcheck-create-track.png",alt:"Soundcheck Create Track"})),(0,n.kt)("p",null,"Filters allow a user further customization for their tracks to only be applicable to specific entities in the Software Catalog. This allows users to tie their tracks to specific tags such as \u201cJava\u201d, \u201cservice\u201d or \u201cproduction\u201d to name a few. You can have as many or as few selections per type as you want to include in each track. Each type of filter will display a dropdown menu with your choice for selection. You can select any number of filters per section as desired."),(0,n.kt)("p",null,"Checks are searchable, and can be dragged-and-dropped from the list of checks into the level(s) of the track. Levels can be added to a track with the \u201c+ Add Level\u201d button shown above. Organizing checks into levels allows for a more nuanced read of what checks cleared and which ones didn\u2019t. Most use levels by order of difficulty to clear, where level one means hardest to pass, level two is medium hard to pass, and level three is relatively easy to pass."),(0,n.kt)("h4",{id:"editing-a-track"},"Editing a track"),(0,n.kt)("p",null,"Once a track is created, you will be able to manage and edit your track on its detail page. From the tracks listing page, you will see an option to edit your track, which will bring you to the details page shown below."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://spotify-plugins-for-backstage-readme-images.spotifycdn.com/soundcheck-edit-track.png",alt:"Soundcheck Edit Track"})),(0,n.kt)("p",null,"As with checks, you can make as many changes as desired when editing tracks. Just make sure to save your track in order for changes to take effect. Also, similar to checks,, editing a track and saving will immediately reflect onto anything that has been assigned to said track."),(0,n.kt)("h3",{id:"fact-collectors"},"Fact Collectors"),(0,n.kt)("p",null,"While Soundcheck comes with two built-in fact collectors: catalog and soundcheck, soundcheck can be extended with additional fact collectors. A fact collector can collect one or more facts on a given entity. At the moment, only Github fact collectors are supported for No Code UI, with support for others coming in future releases."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://spotify-plugins-for-backstage-readme-images.spotifycdn.com/soundcheck-fc-main.png",alt:"Soundcheck FC Main Screen"})),(0,n.kt)("h4",{id:"configuring-a-fact-collector"},"Configuring a fact collector"),(0,n.kt)("p",null,"To configure a fact collector, make sure you are on the Collectors tab. Click on a Fact's \u201cConfigure\u201d link to open a modal that displays the Fact Collector's configuration form."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"WARNING: If you already have a config YAML file setup, you will be unable to use No-Code UI to configure your collector. In order to use the No-Code UI, simply remove the YAML file/reference and you will have access to configure from No-Code UI.")),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://spotify-plugins-for-backstage-readme-images.spotifycdn.com/soundcheck-fc-modal.png",alt:"Soundcheck FC Modal"})),(0,n.kt)("p",null,"Once you choose to configure a collector, you will see the following page with 3 configuration options. You can see what each configuration collects in its description. All 3 configs have the following options:"),(0,n.kt)("h4",{id:"frequency"},"Frequency"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://spotify-plugins-for-backstage-readme-images.spotifycdn.com/soundcheck-fc-freq.png",alt:"Soundcheck FC Frequency"})),(0,n.kt)("p",null,"You can set the frequency of how often to collect details from each collector option. The frequency of runs can be set using regular intervals or defined as custom cron expressions."),(0,n.kt)("h4",{id:"filters"},"Filters"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://spotify-plugins-for-backstage-readme-images.spotifycdn.com/soundcheck-fc-filters.png",alt:"Soundcheck FC Filters"})),(0,n.kt)("p",null,"You can set filters for each option as well. These filters contain the same options as Tracks. You can learn by going to the ",(0,n.kt)("a",{parentName:"p",href:"#creating-a-new-track"},"Creating a new track")," section."),(0,n.kt)("h4",{id:"caching"},"Caching"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://spotify-plugins-for-backstage-readme-images.spotifycdn.com/soundcheck-fc-cache.png",alt:"Soundcheck FC Cache"})),(0,n.kt)("p",null,"Lastly, you can enable Caching and set up an optional duration for said cache."),(0,n.kt)("p",null,"Once you have finished making your desired changes, make sure to click on the save button in order to properly save you configuration. Optionally, you can click on the cancel button at anytime to discard your changes.."),(0,n.kt)("h2",{id:"rbac-integration"},"RBAC Integration"),(0,n.kt)("p",null,"Along with the No Code UI release, we have recently integrated Soundcheck with the ",(0,n.kt)("a",{parentName:"p",href:"https://backstage.spotify.com/plugins/rbac/"},"RBAC plugin"),". Admins can now use the RBAC plugin to manage (allow and restrict) what individual users or groups can do within Soundcheck."),(0,n.kt)("p",null,"Soundcheck\u2019s No-Code UI integrates with Backstage\u2019s permission framework on the RBAC plugin. This integration enables restricting which users/groups can Create, Read, Update, or Delete (CRUD) Soundcheck checks and tracks."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://spotify-plugins-for-backstage-readme-images.spotifycdn.com/soundcheck-rbac-setup.png",alt:"Soundcheck RBAC"})),(0,n.kt)("p",null,"Take a look at the ",(0,n.kt)("a",{parentName:"p",href:"https://backstage.spotify.com/plugins/rbac/"},"RBAC Integration")," for details and ",(0,n.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@spotify/backstage-plugin-rbac"},"RBAC Readme")," for steps."))}h.isMDXComponent=!0}}]);