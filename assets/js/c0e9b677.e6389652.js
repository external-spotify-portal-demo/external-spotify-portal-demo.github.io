"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[857],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=c(n),p=i,h=u["".concat(s,".").concat(p)]||u[p]||g[p]||r;return n?a.createElement(h,l(l({ref:t},d),{},{components:n})):a.createElement(h,l({ref:t},d))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:i,l[1]=o;for(var c=2;c<r;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1608:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>g,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var a=n(7462),i=(n(7294),n(3905));const r={title:"Migrating from versions < 0.9.0",sidebar_position:5},l="Migrating from previous versions",o={unversionedId:"skill-exchange/migration",id:"skill-exchange/migration",title:"Migrating from versions < 0.9.0",description:"As of version 0.9.0, Skill Exchange no longer requires a Docker service backend to operate, greatly simplifying the installation and maintenance of the plugin. The Docker backend service is now deprecated, and support will cease with the next version of Skill Exchange plugins.",source:"@site/docs/skill-exchange/migration.mdx",sourceDirName:"skill-exchange",slug:"/skill-exchange/migration",permalink:"/skill-exchange/migration",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/skill-exchange/migration.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Migrating from versions < 0.9.0",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Tutorials",permalink:"/skill-exchange/tutorials/"},next:{title:"Insights",permalink:"/insights/"}},s={},c=[{value:"Migrating from the legacy Docker backend service",id:"migrating-from-the-legacy-docker-backend-service",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"1. Configuring the Skill Exchange Plugin database connection",id:"1-configuring-the-skill-exchange-plugin-database-connection",level:3},{value:"2. Start-up the Skill Exchange plugin",id:"2-start-up-the-skill-exchange-plugin",level:3},{value:"3. Optional Fully decommissioning the Docker Service containers",id:"3-optional-fully-decommissioning-the-docker-service-containers",level:3},{value:"Remove per-plugin database configuration",id:"remove-per-plugin-database-configuration",level:4},{value:"Backup and Restore the Data",id:"backup-and-restore-the-data",level:4}],d={toc:c},u="wrapper";function g(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"migrating-from-previous-versions"},"Migrating from previous versions"),(0,i.kt)("p",null,"As of version 0.9.0, Skill Exchange no longer requires a Docker service backend to operate, greatly simplifying the installation and maintenance of the plugin. The Docker backend service is now deprecated, and support will cease with the next version of Skill Exchange plugins."),(0,i.kt)("p",null,"If this is the first time you're installing the Skill Exchange plugin, then it is strongly recommended you use the new backend service by following the steps above, and ignore this section."),(0,i.kt)("p",null,"For existing users, the default now is to use the new Skill Exchange backend plugin, and we have provided migration steps below to make the switch. However, users who want to opt out of this update can include the following configuration in their ",(0,i.kt)("inlineCode",{parentName:"p"},"app-config.yaml")," (or equivalent) file."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-diff"},"skillExchange:\n  apiHost: http://localhost:8080\n+  disableNewApi: true\n")),(0,i.kt)("h2",{id:"migrating-from-the-legacy-docker-backend-service"},"Migrating from the legacy Docker backend service"),(0,i.kt)("p",null,"If this is your first time installing the Skill Exchange plugin, you can safely ignore this section. However, if you are running Skill Exchange with the Docker backend service and wish to migrate your data to the new Backstage backend plugin, you can do so by following the steps below."),(0,i.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"It's highly recommended that you back up your data before starting the migration.")," While the migration does not delete any previous data, we still recommend backing up any sensitive data in case of unforeseen failure."),(0,i.kt)("h3",{id:"1-configuring-the-skill-exchange-plugin-database-connection"},"1. Configuring the Skill Exchange Plugin database connection"),(0,i.kt)("p",null,"By default, the Skill Exchange backend plugin will create a new database when started up. Therefore, we must configure the plugin to connect to the previously created database. Depending on how you set up the Docker backend service, you can do this by either passing the full connection URL via a per-plugin configuration in your ",(0,i.kt)("inlineCode",{parentName:"p"},"app-config.yaml")," (or equivalent) file, as shown below:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-diff"},"backend:\n  database:\n    # ... Existing database configuration\n+   plugin:\n+     skillEx:\n+       connection: 'postgresql://existing.pg-instance.tld:5432/skill-exchange-db'\n")),(0,i.kt)("p",null,"or if you used the same database server for the Docker and Backstage backend services, then you can just set the name of the Skill Exchange database to what was used by the Docker service:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-diff"},"backend:\n  database:\n    # ... Existing database configuration\n+   plugin:\n+     skillEx:\n+       connection:\n+         database: skill-exchange-db\n")),(0,i.kt)("p",null,"More information on this can be found in the ",(0,i.kt)("a",{parentName:"p",href:"https://backstage.io/docs/tutorials/configuring-plugin-databases/#configuration"},"Backstage Database Plugin")," documentation."),(0,i.kt)("h3",{id:"2-start-up-the-skill-exchange-plugin"},"2. Start-up the Skill Exchange plugin"),(0,i.kt)("p",null,"Now that we have configured the connection, we can start the Skill Exchange plugin, which will automatically run the migration scripts to set up the new database schema and migrate any existing data. To do this, start Backstage normally."),(0,i.kt)("p",null,"In the logs you should see similar output to below, which will confirm the migration script ran"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u2705  Loaded existing data\n\ud83d\ude9a Migrating skills\n\u2514 Inserted 41 entries\n\ud83d\ude9a Migrating self reported skills\n\u2514 Inserted 85 entries\n\ud83d\ude9a Migrating embeds and mentorships\n\u2502  14 owners\n\u2502  39 skills\n\u2502  2 resources\n\u2502  3 connections\n\u2502  1 saved searches\n\u2514 Inserted 13 entries\n\ud83d\ude9a Migrating Hack Events\n\u2502  11 organizers\n\u2502  5 categories\n\u2514 Inserted 5 entries\n\ud83d\ude9a Migrating Hack\n\u2502  12 members\n\u2502  12 skills\n\u2502  1 comments\n\u2502  2 followers\n\u2502  1 media\n\u2502  4 vote sessions\n\u2514 Inserted 7 entries\n")),(0,i.kt)("p",null,"Now navigate to the Skill Exchange page in Backstage to confirm that your data has been successfully migrated."),(0,i.kt)("h3",{id:"3-optional-fully-decommissioning-the-docker-service-containers"},"3. ","[Optional]"," Fully decommissioning the Docker Service containers"),(0,i.kt)("p",null,"Once you\u2019ve followed the migration instructions, you\u2019ll be using the new Skill Exchange backend service and should see all your data migrated to the new schema."),(0,i.kt)("p",null,"However, if you used a separate database server for the Docker service, you can only partially decommission those containers as the database server is still in use by the Skill Exchange plugin. This might not be desirable for some."),(0,i.kt)("p",null,"To resolve this, we can use ",(0,i.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/current/app-pgdump.html"},"pg_dump")," to back up and ",(0,i.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/current/app-pgrestore.html"},"pg_restore")," to copy the migrated data from the previous database server to the one used by the rest of the Backstage plugins."),(0,i.kt)("h4",{id:"remove-per-plugin-database-configuration"},"Remove per-plugin database configuration"),(0,i.kt)("p",null,"The first step is to remove the per-plugin database configuration from your ",(0,i.kt)("inlineCode",{parentName:"p"},"app-config.yaml")," (or equivalent) that we added in the migration instructions. This will configure the Skill Exchange to use the default database connection, creating an empty plugin database alongside the other plugins."),(0,i.kt)("p",null,"Also, ensure any skill ingestion configuration is disabled which could lead to conflicts when copying the skill data from the previous database."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-diff"},"backend:\n  database:\n    # ... Existing database configuration\n-   plugin:\n-     skillEx:\n-       connection: 'postgresql://existing.pg-instance.tld:5432/skill-exchange-db'\n\nskillExchange:\n-  skillIngestion:\n-    location: /path/to/default-skills.yaml\n")),(0,i.kt)("p",null,"After restarting Backstage, you can confirm this step was successful by going to the Skill Exchange plugin, where there should be no posts. Be sure to take note of the name of the database, as we\u2019ll need that in the next step. It should be something like ",(0,i.kt)("inlineCode",{parentName:"p"},"backstage_plugin_skillEx")),(0,i.kt)("h4",{id:"backup-and-restore-the-data"},"Backup and Restore the Data"),(0,i.kt)("p",null,"We will use the pg_dump and pg_restore command-line tools to create a backup of the data we just migrated from the Docker Service database and restore it to the empty database we created in the previous step."),(0,i.kt)("p",null,"Using the command below, we can do that in one go. You\u2019ll be prompted twice for passwords \u2014 first, for the Docker Service database password, then the Backstage Plugins database password."),(0,i.kt)("p",null,"We must also modify the command below to make it work with your setup. The parts that need modifying are:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"DOCKER_DB_USER"),(0,i.kt)("td",{parentName:"tr",align:null},"Username of the Docker Service database. E.g. ",(0,i.kt)("em",{parentName:"td"},"postgres"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"DOCKER_DB_HOST"),(0,i.kt)("td",{parentName:"tr",align:null},"The IP of the Docker Service database. E.g. ","_","127.0.0.1")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"DOCKER_DB_PORT"),(0,i.kt)("td",{parentName:"tr",align:null},"The port of the Docker Service database. E.g. ",(0,i.kt)("em",{parentName:"td"},"5432"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"DOCKER_DB_NAME"),(0,i.kt)("td",{parentName:"tr",align:null},"The name of the Docker Service database containing the data we want to move. E.g. ",(0,i.kt)("em",{parentName:"td"},"postgres"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"BS_DB_USER"),(0,i.kt)("td",{parentName:"tr",align:null},"Username of the Backstage Plugins database")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"BS_DB_HOST"),(0,i.kt)("td",{parentName:"tr",align:null},"The IP of the Backstage Plugins database")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"BS_DB_PORT"),(0,i.kt)("td",{parentName:"tr",align:null},"The port of the Backstage Plugins database")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"BS_DB_NAME"),(0,i.kt)("td",{parentName:"tr",align:null},"The name of the Skill Exchange plugin database, which we took note of in step 1. E.g. backstage_plugin_skillEx")))),(0,i.kt)("p",null,"Once you\u2019ve replaced the placeholder in the command below with the appropriate values, you can run the command from a terminal to copy the data."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"pg_dump -U <DOCKER_DB_USER> -h <DOCKER_DB_HOST> -p <DOCKER_DB_PORT> -d <DOCKER_DB_NAME> --data-only -Fc \\\n--exclude-table=category \\\n--exclude-table=event \\\n--exclude-table=vote_session \\\n--exclude-table=vote \\\n--exclude-table=comments \\\n--exclude-table=hacks \\\n--exclude-table=media \\\n--exclude-table=hack_category \\\n--exclude-table=hack_following \\\n--exclude-table=skill \\\n--exclude-table=connections \\\n--exclude-table=saved_search \\\n--exclude-table=bookmarks \\\n--exclude-table=self_reported_skill \\\n--exclude-table=skill_exchange_post \\\n--exclude-table=flyway_schema_history \\\n--exclude-table=backstage_backend_tasks__knex_migrations \\\n--exclude-table=backstage_backend_tasks__knex_migrations_lock \\\n--exclude-table=flyway_schema_history \\\n--exclude-table=knex_migrations \\\n--exclude-table=knex_migrations_lock \\\n--exclude-table=skill_exchange__tasks \\\n--exclude-table=backstage_backend_tasks__tasks \\\n--exclude-table=comments_id_seq \\\n--exclude-table=hacks_id_seq \\\n--exclude-table=media_id_seq \\\n--exclude-table=saved_search_id_seq \\\n--exclude-table=skill_exchange_post_id_seq \\\n--exclude-table=skill_id_new_seq \\\n--exclude-table=vote_session_id_seq \\\n| pg_restore -U <BS_DB_USER> -h <BS_DB_HOST> -p <BS_DB_PORT> -d <BS_DB_NAME> --data-only --disable-triggers -Fc\n")),(0,i.kt)("p",null,"You can confirm the success of the restoration by going into the Skill Exchange plugin and checking that all your data is now visible. Once you\u2019re happy that the data was copied correctly, you can stop all Docker service's associated containers."))}g.isMDXComponent=!0}}]);