"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[220],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>u});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),p=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},s="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),s=p(a),m=r,u=s["".concat(d,".").concat(m)]||s[m]||k[m]||l;return a?n.createElement(u,i(i({ref:t},c),{},{components:a})):n.createElement(u,i({ref:t},c))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=m;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[s]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5575:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>k,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const l={title:"Tracks",sidebar_position:1},i=void 0,o={unversionedId:"soundcheck/core-concepts/tracks",id:"soundcheck/core-concepts/tracks",title:"Tracks",description:"Overall Shape Of A Track",source:"@site/docs/soundcheck/core-concepts/tracks.mdx",sourceDirName:"soundcheck/core-concepts",slug:"/soundcheck/core-concepts/tracks",permalink:"/soundcheck/core-concepts/tracks",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/soundcheck/core-concepts/tracks.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Tracks",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Core-concepts",permalink:"/category/core-concepts"},next:{title:"Fact checks",permalink:"/soundcheck/core-concepts/fact-checks"}},d={},p=[{value:"Overall Shape Of A Track",id:"overall-shape-of-a-track",level:2},{value:"Track Fields",id:"track-fields",level:2},{value:"Example",id:"example",level:3},{value:"Level Fields",id:"level-fields",level:2},{value:"Check Fields",id:"check-fields",level:2},{value:"Entity Filter",id:"entity-filter",level:2},{value:"CatalogFilter",id:"catalogfilter",level:3},{value:"FilterKey",id:"filterkey",level:3},{value:"FilterValue",id:"filtervalue",level:3},{value:"Examples",id:"examples",level:3},{value:"String",id:"string",level:4},{value:"Array Example",id:"array-example",level:4},{value:"Presence",id:"presence",level:4},{value:"Integrating with Soundcheck",id:"integrating-with-soundcheck",level:2},{value:"Fact Framework",id:"fact-framework",level:2},{value:"Fact Collectors",id:"fact-collectors",level:3},{value:"Third Party Integrations",id:"third-party-integrations",level:4},{value:"Fact Checks",id:"fact-checks",level:2},{value:"Executing Checks",id:"executing-checks",level:3}],c={toc:p},s="wrapper";function k(e){let{components:t,...a}=e;return(0,r.kt)(s,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"overall-shape-of-a-track"},"Overall Shape Of A Track"),(0,r.kt)("p",null,"The following is an example of a descriptor file for a Soundcheck Track:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"- id: test-certified\n  name: Test Certified\n  ownerEntityRef: group:default/example-owner\n  description: >\n    Improve quality and reliability of your software component by measuring the use of testing best practices.\n  documentationURL: https://www.backstage.io\n  filter:\n    catalog:\n      metadata.tags: python\n  levels:\n    - ordinal: 1\n      checks:\n        - id: python_service_runs_tests\n          name: The python service runs pytest\n          description: >\n            This service is currently running pytest as part of its GitHub actions workflow as defined in the build.yaml\n    - ordinal: 2\n      checks:\n        - id: github_actions_tests_passing\n          name: CI/CD Tests passing\n          description: >\n            The last tests run in GitHub Actions was successful.\n")),(0,r.kt)("p",null,"See below for details about these fields."),(0,r.kt)("h2",{id:"track-fields"},"Track Fields"),(0,r.kt)("p",null,"The Track object is composed of some top level summary fields as well as more complex nested fields for filters and levels."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"id")),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Unique identifier for this particular Soundcheck Track.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Human-readable identifier for this particular Soundcheck Track.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"description")),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Additional details about the motivation behind this set of checks.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ownerEntityRef")),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Relates this Soundcheck Track to the person or team responsible for maintaining it.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"documentationURL")),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Link users can follow for more details about this track.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"group")),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Connects logically similar but functionally disjoint tracks into groups.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"filter")),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Specifies the type of entities that a particular track applies to.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"levels")),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Offers an additional layer of specificity on top of the track definition.")))),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("h2",{id:"level-fields"},"Level Fields"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"level")," object is composed of several top-level summary fields and a repeated check definition field."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ordinal")),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Uniquely identifies a particular level within a track.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Provides a human-readable title for the level.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"description")),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Allows further expression regarding the purpose of a level.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"checks")),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Specifies all the checks an entity must pass to be certified at this level.")))),(0,r.kt)("h2",{id:"check-fields"},"Check Fields"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"check")," object defines the atomic unit of work within the Soundcheck certification process."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"id")),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Links this definition to the actual check results.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Provides the human-readable title for this check.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"description")),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Provides additional context on the motivation and implementation of check.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"filter")),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Allows further filtering of checks within a track definition.")))),(0,r.kt)("h2",{id:"entity-filter"},"Entity Filter"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Filter")," objects narrow down applicability for both tracks and checks. Currently, Soundcheck supports filtering based on the shape of a ",(0,r.kt)("a",{parentName:"p",href:"https://backstage.io/docs/features/software-catalog/descriptor-format"},"Software Catalog Entity"),"."),(0,r.kt)("h3",{id:"catalogfilter"},"CatalogFilter"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"CatalogFilter"),"s consist of a map of ",(0,r.kt)("inlineCode",{parentName:"p"},"FilterKey")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"FilterValue"),", and an ",(0,r.kt)("inlineCode",{parentName:"p"},"Entity")," matches a ",(0,r.kt)("inlineCode",{parentName:"p"},"CatalogFilter")," if every entry in the filter matches the ",(0,r.kt)("inlineCode",{parentName:"p"},"Entity"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"FilterKey")),(0,r.kt)("td",{parentName:"tr",align:null},"Represents specific subsets of fields within the Software Catalog Entity descriptor.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"FilterValue")),(0,r.kt)("td",{parentName:"tr",align:null},"Represents patterns for entity matching.")))),(0,r.kt)("h3",{id:"filterkey"},"FilterKey"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"FilterKey"),"s represent specific subsets of fields within the Software Catalog Entity descriptor, categorized as follows:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"'kind', 'spec.type', 'spec.lifecycle', 'spec.owner', 'spec.system'")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Array"),(0,r.kt)("td",{parentName:"tr",align:null},"'metadata.tags'")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Record"),(0,r.kt)("td",{parentName:"tr",align:null},"'metadata.annotations' (e.g., 'metadata.annotations",'["backstage.io/techdocs-ref"]',"'), 'metadata.labels'")))),(0,r.kt)("h3",{id:"filtervalue"},"FilterValue"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"FilterValue"),"s represent patterns for entity matching:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Checks if the Entity property specified by the corresponding ",(0,r.kt)("inlineCode",{parentName:"td"},"FilterKey")," matches the provided value.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Array"),(0,r.kt)("td",{parentName:"tr",align:null},"Checks if the Entity property specified by the corresponding ",(0,r.kt)("inlineCode",{parentName:"td"},"FilterKey")," matches any string in the array.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Presence"),(0,r.kt)("td",{parentName:"tr",align:null},"Tests presence/absence of a ",(0,r.kt)("inlineCode",{parentName:"td"},"FilterKey")," in an ",(0,r.kt)("inlineCode",{parentName:"td"},"Entity"),".")))),(0,r.kt)("h3",{id:"examples"},"Examples"),(0,r.kt)("h4",{id:"string"},"String"),(0,r.kt)("p",null,"Soundcheck checks whether the Entity property specified by the ",(0,r.kt)("inlineCode",{parentName:"p"},"FilterKey")," matches the provided string value (case insensitive)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"filter:\n  catalog:\n    spec.lifecycle: 'production'\n")),(0,r.kt)("h4",{id:"array-example"},"Array Example"),(0,r.kt)("p",null,"Soundcheck checks whether the Entity property specified by the ",(0,r.kt)("inlineCode",{parentName:"p"},"FilterKey")," matches any of the strings in the provided array value (case insensitive)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"filter:\n  catalog:\n    spec.type: ['service', 'website']\n")),(0,r.kt)("h4",{id:"presence"},"Presence"),(0,r.kt)("p",null,"ValueMatcher ",(0,r.kt)("inlineCode",{parentName:"p"},"FilterValue"),"s test for the presence or absence of a particular ",(0,r.kt)("inlineCode",{parentName:"p"},"FilterKey")," in an ",(0,r.kt)("inlineCode",{parentName:"p"},"Entity"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"*")," considers any value (except undefined) a match, and ",(0,r.kt)("inlineCode",{parentName:"p"},"!*")," only matches missing or undefined values."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"filter:\n  catalog:\n    metadata.annotations[\"backstage.io/techdocs-ref\"]: { match: '*' }\n    metadata.annotations[\"wikipedia.org\"]: { match: '!*' }\n")),(0,r.kt)("h2",{id:"integrating-with-soundcheck"},"Integrating with Soundcheck"),(0,r.kt)("p",null,"Soundcheck enables developers to evaluate software components against standards through the creation of tracks, levels, and checks."),(0,r.kt)("h2",{id:"fact-framework"},"Fact Framework"),(0,r.kt)("p",null,"Soundcheck's fact framework collects information about an entity using Fact Collectors or the Facts API."),(0,r.kt)("h3",{id:"fact-collectors"},"Fact Collectors"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Collector"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Catalog"),(0,r.kt)("td",{parentName:"tr",align:null},"Collects facts from Backstage's Software Catalog as fact data.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Soundcheck"),(0,r.kt)("td",{parentName:"tr",align:null},"Exposes Soundcheck track certifications as facts.")))),(0,r.kt)("h4",{id:"third-party-integrations"},"Third Party Integrations"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Integration"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Source Control Management (SCM)"),(0,r.kt)("td",{parentName:"tr",align:null},"Provides integration with source control management providers.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GitHub"),(0,r.kt)("td",{parentName:"tr",align:null},"Enables gathering facts regarding GitHub repositories.")))),(0,r.kt)("h2",{id:"fact-checks"},"Fact Checks"),(0,r.kt)("p",null,"Fact checks define rules that determine whether a check result should pass or fail."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"id")),(0,r.kt)("td",{parentName:"tr",align:null},"Unique identifier for this fact check.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:null},"A name for the fact check suitable for display.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"description")),(0,r.kt)("td",{parentName:"tr",align:null},"A description of the fact check.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"rule")),(0,r.kt)("td",{parentName:"tr",align:null},"Conditions that determine check pass/fail.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"schedule")),(0,r.kt)("td",{parentName:"tr",align:null},"How often and on which entities to run the check.")))),(0,r.kt)("h3",{id:"executing-checks"},"Executing Checks"),(0,r.kt)("p",null,"Fact checks are executed when dependent facts are updated, scheduled, or"))}k.isMDXComponent=!0}}]);